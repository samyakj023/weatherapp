{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { map, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/api/api.service\";\nimport * as i2 from \"src/app/services/store/store.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction CitySelectComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const city_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", city_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", city_r1.nm, \" \");\n  }\n}\n\nexport class CitySelectComponent {\n  constructor(apiService, storeService) {\n    this.apiService = apiService;\n    this.storeService = storeService;\n    this.cities$ = this.apiService.getCities();\n    this.cityForm = new FormGroup({\n      city: new FormControl(null)\n    });\n  }\n\n  ngAfterViewInit() {\n    this.subsciption = this.apiService.getCities().pipe(map(cities => cities[0]), tap(city => {\n      this.cityForm.controls['city'].setValue(city);\n    })).subscribe();\n    this.onCityChange();\n  }\n\n  onCityChange() {\n    this.cityForm.controls['city'].valueChanges.pipe(tap(value => {\n      if (value) {\n        this.storeService.setSelectedCity(value);\n      }\n    })).subscribe();\n  }\n\n  ngOnDestroy() {\n    this.subsciption.unsubscribe();\n  }\n\n}\n\nCitySelectComponent.ɵfac = function CitySelectComponent_Factory(t) {\n  return new (t || CitySelectComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.StoreService));\n};\n\nCitySelectComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CitySelectComponent,\n  selectors: [[\"app-city-select\"]],\n  decls: 7,\n  vars: 4,\n  consts: [[3, \"formGroup\"], [1, \"header-title\"], [1, \"header-select\"], [\"id\", \"citiesList\", \"formControlName\", \"city\", 1, \"form-control\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\"]],\n  template: function CitySelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2, \"Select City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"select\", 3);\n      i0.ɵɵtemplate(5, CitySelectComponent_option_5_Template, 2, 2, \"option\", 4);\n      i0.ɵɵpipe(6, \"async\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.cityForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 2, ctx.cities$));\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i3.AsyncPipe],\n  styles: [\".header-title[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n  color: white;\\n}\\n\\nselect[_ngcontent-%COMP%] {\\n  width: 100%;\\n  font-size: 1.15rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNpdHktc2VsZWN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtBQUNGIiwiZmlsZSI6ImNpdHktc2VsZWN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlci10aXRsZSB7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuc2VsZWN0IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBmb250LXNpemU6IDEuMTVyZW07XHJcbn1cclxuIl19 */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AAMA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,gBAAvC;AACA,SAASC,GAAT,EAA4BC,GAA5B,QAAuC,MAAvC;;;;;;;;;ICHMC;IACEA;IACFA;;;;;IAF6CA;IAC3CA;IAAAA;;;;ADaR,OAAM,MAAOC,mBAAP,CAA0B;EAQ9BC,YACUC,UADV,EAEUC,YAFV,EAEoC;IAD1B;IACA;IARH,eAAU,KAAKD,UAAL,CAAgBE,SAAhB,EAAV;IAEA,gBAAW,IAAIR,SAAJ,CAAc;MAC9BS,IAAI,EAAE,IAAIV,WAAJ,CAA6B,IAA7B;IADwB,CAAd,CAAX;EAOH;;EAEJW,eAAe;IACb,KAAKC,WAAL,GAAmB,KAAKL,UAAL,CAChBE,SADgB,GAEhBI,IAFgB,CAGfX,GAAG,CAAEY,MAAD,IAAYA,MAAM,CAAC,CAAD,CAAnB,CAHY,EAIfX,GAAG,CAAEO,IAAD,IAAS;MACX,KAAKK,QAAL,CAAcC,QAAd,CAAuB,MAAvB,EAA+BC,QAA/B,CAAwCP,IAAxC;IACD,CAFE,CAJY,EAQhBQ,SARgB,EAAnB;IAUA,KAAKC,YAAL;EACD;;EAEMA,YAAY;IACjB,KAAKJ,QAAL,CAAcC,QAAd,CAAuB,MAAvB,EAA+BI,YAA/B,CACGP,IADH,CAEIV,GAAG,CAAEkB,KAAD,IAAU;MACZ,IAAIA,KAAJ,EAAW;QACT,KAAKb,YAAL,CAAkBc,eAAlB,CAAkCD,KAAlC;MACD;IACF,CAJE,CAFP,EAQGH,SARH;EASD;;EAEDK,WAAW;IACT,KAAKX,WAAL,CAAiBY,WAAjB;EACD;;AAzC6B;;;mBAAnBnB,qBAAmBD;AAAA;;;QAAnBC;EAAmBoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MClBhCzB,gCAA6B,CAA7B,EAA6B,KAA7B,EAA6B,CAA7B;MAC4BA;MAAWA;MACrCA,+BAA2B,CAA3B,EAA2B,QAA3B,EAA2B,CAA3B;MAEIA;;MAGFA;;;;MAPEA;MAIyBA;MAAAA","names":["FormControl","FormGroup","map","tap","i0","CitySelectComponent","constructor","apiService","storeService","getCities","city","ngAfterViewInit","subsciption","pipe","cities","cityForm","controls","setValue","subscribe","onCityChange","valueChanges","value","setSelectedCity","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Coolp\\weather-app\\src\\app\\components\\city-select\\city-select.component.ts","C:\\Users\\Coolp\\weather-app\\src\\app\\components\\city-select\\city-select.component.html"],"sourcesContent":["import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { map, Subscription, tap } from 'rxjs';\r\nimport { City } from 'src/app/interfaces/city-intf';\r\nimport { ApiService } from 'src/app/services/api/api.service';\r\nimport { StoreService } from 'src/app/services/store/store.service';\r\n\r\n@Component({\r\n  selector: 'app-city-select',\r\n  templateUrl: './city-select.component.html',\r\n  styleUrls: ['./city-select.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CitySelectComponent implements AfterViewInit, OnDestroy {\r\n  private subsciption!: Subscription;\r\n  public cities$ = this.apiService.getCities();\r\n\r\n  public cityForm = new FormGroup({\r\n    city: new FormControl<City | null>(null),\r\n  });\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private storeService: StoreService\r\n  ) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.subsciption = this.apiService\r\n      .getCities()\r\n      .pipe(\r\n        map((cities) => cities[0]),\r\n        tap((city) => {\r\n          this.cityForm.controls['city'].setValue(city);\r\n        })\r\n      )\r\n      .subscribe();\r\n\r\n    this.onCityChange();\r\n  }\r\n\r\n  public onCityChange() {\r\n    this.cityForm.controls['city'].valueChanges\r\n      .pipe(\r\n        tap((value) => {\r\n          if (value) {\r\n            this.storeService.setSelectedCity(value);\r\n          }\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subsciption.unsubscribe();\r\n  }\r\n}\r\n","<form [formGroup]=\"cityForm\">\r\n  <div class=\"header-title\">Select City</div>\r\n  <div class=\"header-select\">\r\n    <select class=\"form-control\" id=\"citiesList\" formControlName=\"city\">\r\n      <option *ngFor=\"let city of cities$ | async\" [ngValue]=\"city\">\r\n        {{ city.nm }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module"}